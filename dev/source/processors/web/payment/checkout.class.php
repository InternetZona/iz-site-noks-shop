<?php
require_once dirname(dirname(dirname(__FILE__))) . "/mgr/payment/provider/yandex-money/yandexmoney.class.php";

use YandexCheckout\Model\Notification;

class modWebPaymentsCheckoutProcessor extends modYandexMoneyProviderProcessor
{

    private $paymentData = '';

    public function initialize()
    {
        $this->paymentData = $this->getProperty('notification', false);

        if (!$this->paymentData || $this->paymentData['event'] != 'payment.waiting_for_capture') {
            $this->addFieldError('notification', 'Payment data is empty.');
        }

        return parent::initialize(); // TODO: Change the autogenerated stub
    }

    /**
     * @return array|mixed|string
     * @throws \YandexCheckout\Common\Exceptions\ApiException
     * @throws \YandexCheckout\Common\Exceptions\BadApiRequestException
     * @throws \YandexCheckout\Common\Exceptions\ForbiddenException
     * @throws \YandexCheckout\Common\Exceptions\InternalServerError
     * @throws \YandexCheckout\Common\Exceptions\NotFoundException
     * @throws \YandexCheckout\Common\Exceptions\ResponseProcessingException
     * @throws \YandexCheckout\Common\Exceptions\TooManyRequestsException
     * @throws \YandexCheckout\Common\Exceptions\UnauthorizedException
     */
    public function process() {

        $prevent = $this->beforeCheckout();

        if ($prevent !== true) {
            return $this->failure($prevent);
        }

        $payment = $this->client->capturePayment(
            array(
                'amount' => array(
                    'value' => $this->paymentData['object']['amount']['value'],
                    'currency' => $this->paymentData['object']['amount']['currency'],
                ),
            ),
            $this->paymentData['object']['id'],
            uniqid('', true)
        );

        $this->afterCheckout();

        return $this->success('Payment success.');

    }

    public function beforeCheckout()
    {
        return true;
    }

    public function afterCheckout()
    {
        $metadata = $this->paymentData['object']['metadata'];
        $amount = $this->paymentData['object']['amount'];

        $properties = array(
            'template'  => 'checkout',
            'subject'   => 'Оплата заказа',
            'paymentId' => $this->paymentData['object']['id'],
            'amount'    => $amount['value'],
            'orderId'   => $metadata['order'],
            'username'  => $metadata['client'],
            'email'     => $metadata['email'],
            'phone'     => $metadata['phone'],
        );

        $this->modx->runProcessor('web/form', $properties, array(
            'processors_path'   => MODX_CORE_PATH . 'components/modxsite/processors/'
        ));

        $this->modx->error->reset();
    }

}
return 'modWebPaymentsCheckoutProcessor';